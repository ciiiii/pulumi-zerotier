// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package zerotier

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for ZeroTier networks, allowing you to find a network by ID
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-zerotier/sdk/go/zerotier"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/yckao/pulumi-zerotier/sdk/go/zerotier"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := zerotier.LookupNetwork(ctx, &GetNetworkArgs{
// 			Id: pulumi.StringRef(zerotier_network.Bobs_garage.Id),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupNetwork(ctx *pulumi.Context, args *LookupNetworkArgs, opts ...pulumi.InvokeOption) (*LookupNetworkResult, error) {
	var rv LookupNetworkResult
	err := ctx.Invoke("zerotier:index/getNetwork:getNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetwork.
type LookupNetworkArgs struct {
	// IPv4 Assignment RuleSets
	AssignIpv4s []GetNetworkAssignIpv4 `pulumi:"assignIpv4s"`
	// IPv6 Assignment RuleSets
	AssignIpv6s []GetNetworkAssignIpv6 `pulumi:"assignIpv6s"`
	// Rules regarding IPv4 and IPv6 assignments
	AssignmentPools []GetNetworkAssignmentPool `pulumi:"assignmentPools"`
	// The description of the network
	Description *string `pulumi:"description"`
	// Enable broadcast packets on the network
	EnableBroadcast *bool `pulumi:"enableBroadcast"`
	// The layer 2 flow rules to apply to packets traveling across this network. Please see https://www.zerotier.com/manual/#3*4*1 for more information.
	FlowRules *string `pulumi:"flowRules"`
	// ZeroTier's internal network identifier, aka NetworkID
	Id *string `pulumi:"id"`
	// Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!
	MulticastLimit *int `pulumi:"multicastLimit"`
	// The name of the network
	Name *string `pulumi:"name"`
	// Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.
	Private *bool `pulumi:"private"`
	// A ipv4 or ipv6 network route
	Routes []GetNetworkRoute `pulumi:"routes"`
}

// A collection of values returned by getNetwork.
type LookupNetworkResult struct {
	// IPv4 Assignment RuleSets
	AssignIpv4s []GetNetworkAssignIpv4 `pulumi:"assignIpv4s"`
	// IPv6 Assignment RuleSets
	AssignIpv6s []GetNetworkAssignIpv6 `pulumi:"assignIpv6s"`
	// Rules regarding IPv4 and IPv6 assignments
	AssignmentPools []GetNetworkAssignmentPool `pulumi:"assignmentPools"`
	// The time at which this network was created, in epoch seconds
	CreationTime int `pulumi:"creationTime"`
	// The description of the network
	Description *string `pulumi:"description"`
	// Enable broadcast packets on the network
	EnableBroadcast *bool `pulumi:"enableBroadcast"`
	// The layer 2 flow rules to apply to packets traveling across this network. Please see https://www.zerotier.com/manual/#3*4*1 for more information.
	FlowRules *string `pulumi:"flowRules"`
	// ZeroTier's internal network identifier, aka NetworkID
	Id string `pulumi:"id"`
	// Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!
	MulticastLimit *int `pulumi:"multicastLimit"`
	// The name of the network
	Name string `pulumi:"name"`
	// Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.
	Private *bool `pulumi:"private"`
	// A ipv4 or ipv6 network route
	Routes []GetNetworkRoute `pulumi:"routes"`
}

func LookupNetworkOutput(ctx *pulumi.Context, args LookupNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetworkResult, error) {
			args := v.(LookupNetworkArgs)
			r, err := LookupNetwork(ctx, &args, opts...)
			return *r, err
		}).(LookupNetworkResultOutput)
}

// A collection of arguments for invoking getNetwork.
type LookupNetworkOutputArgs struct {
	// IPv4 Assignment RuleSets
	AssignIpv4s GetNetworkAssignIpv4ArrayInput `pulumi:"assignIpv4s"`
	// IPv6 Assignment RuleSets
	AssignIpv6s GetNetworkAssignIpv6ArrayInput `pulumi:"assignIpv6s"`
	// Rules regarding IPv4 and IPv6 assignments
	AssignmentPools GetNetworkAssignmentPoolArrayInput `pulumi:"assignmentPools"`
	// The description of the network
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Enable broadcast packets on the network
	EnableBroadcast pulumi.BoolPtrInput `pulumi:"enableBroadcast"`
	// The layer 2 flow rules to apply to packets traveling across this network. Please see https://www.zerotier.com/manual/#3*4*1 for more information.
	FlowRules pulumi.StringPtrInput `pulumi:"flowRules"`
	// ZeroTier's internal network identifier, aka NetworkID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!
	MulticastLimit pulumi.IntPtrInput `pulumi:"multicastLimit"`
	// The name of the network
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.
	Private pulumi.BoolPtrInput `pulumi:"private"`
	// A ipv4 or ipv6 network route
	Routes GetNetworkRouteArrayInput `pulumi:"routes"`
}

func (LookupNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getNetwork.
type LookupNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkResult)(nil)).Elem()
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutput() LookupNetworkResultOutput {
	return o
}

func (o LookupNetworkResultOutput) ToLookupNetworkResultOutputWithContext(ctx context.Context) LookupNetworkResultOutput {
	return o
}

// IPv4 Assignment RuleSets
func (o LookupNetworkResultOutput) AssignIpv4s() GetNetworkAssignIpv4ArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []GetNetworkAssignIpv4 { return v.AssignIpv4s }).(GetNetworkAssignIpv4ArrayOutput)
}

// IPv6 Assignment RuleSets
func (o LookupNetworkResultOutput) AssignIpv6s() GetNetworkAssignIpv6ArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []GetNetworkAssignIpv6 { return v.AssignIpv6s }).(GetNetworkAssignIpv6ArrayOutput)
}

// Rules regarding IPv4 and IPv6 assignments
func (o LookupNetworkResultOutput) AssignmentPools() GetNetworkAssignmentPoolArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []GetNetworkAssignmentPool { return v.AssignmentPools }).(GetNetworkAssignmentPoolArrayOutput)
}

// The time at which this network was created, in epoch seconds
func (o LookupNetworkResultOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNetworkResult) int { return v.CreationTime }).(pulumi.IntOutput)
}

// The description of the network
func (o LookupNetworkResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable broadcast packets on the network
func (o LookupNetworkResultOutput) EnableBroadcast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupNetworkResult) *bool { return v.EnableBroadcast }).(pulumi.BoolPtrOutput)
}

// The layer 2 flow rules to apply to packets traveling across this network. Please see https://www.zerotier.com/manual/#3*4*1 for more information.
func (o LookupNetworkResultOutput) FlowRules() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupNetworkResult) *string { return v.FlowRules }).(pulumi.StringPtrOutput)
}

// ZeroTier's internal network identifier, aka NetworkID
func (o LookupNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum number of recipients per multicast or broadcast. Warning - Setting this to 0 will disable IPv4 communication on your network!
func (o LookupNetworkResultOutput) MulticastLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupNetworkResult) *int { return v.MulticastLimit }).(pulumi.IntPtrOutput)
}

// The name of the network
func (o LookupNetworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkResult) string { return v.Name }).(pulumi.StringOutput)
}

// Whether or not the network is private.  If false, members will *NOT* need to be authorized to join.
func (o LookupNetworkResultOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupNetworkResult) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

// A ipv4 or ipv6 network route
func (o LookupNetworkResultOutput) Routes() GetNetworkRouteArrayOutput {
	return o.ApplyT(func(v LookupNetworkResult) []GetNetworkRoute { return v.Routes }).(GetNetworkRouteArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkResultOutput{})
}
