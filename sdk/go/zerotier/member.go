// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package zerotier

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage ZeroTier members and join them to networks
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/yckao/pulumi-zerotier/sdk/go/zerotier"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := zerotier.NewMember(ctx, "alice", &zerotier.MemberArgs{
// 			MemberId:              pulumi.Any(zerotier_identity.Alice.Id),
// 			NetworkId:             pulumi.Any(zerotier_network.Alicenet.Id),
// 			Description:           pulumi.String("Hello, world"),
// 			Hidden:                pulumi.Bool(true),
// 			AllowEthernetBridging: pulumi.Bool(true),
// 			NoAutoAssignIps:       pulumi.Bool(true),
// 			IpAssignments: pulumi.StringArray{
// 				pulumi.String("10.0.0.1"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Member struct {
	pulumi.CustomResourceState

	// Is this member allowed to activate ethernet bridging over the ZeroTier network?
	AllowEthernetBridging pulumi.BoolPtrOutput `pulumi:"allowEthernetBridging"`
	// Is the member authorized on the network?
	Authorized pulumi.BoolPtrOutput `pulumi:"authorized"`
	// List of network capabilities
	Capabilities pulumi.IntArrayOutput `pulumi:"capabilities"`
	// Text description of this member.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Is this member visible?
	Hidden pulumi.BoolPtrOutput `pulumi:"hidden"`
	// List of IP address assignments
	IpAssignments pulumi.StringArrayOutput `pulumi:"ipAssignments"`
	// ID of this member.
	MemberId pulumi.StringOutput `pulumi:"memberId"`
	// Descriptive name of this member.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the network this member belongs to
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// Exempt this member from the IP auto assignment pool on a Network
	NoAutoAssignIps pulumi.BoolPtrOutput `pulumi:"noAutoAssignIps"`
	// List of network tags
	Tags pulumi.IntArrayArrayOutput `pulumi:"tags"`
}

// NewMember registers a new resource with the given unique name, arguments, and options.
func NewMember(ctx *pulumi.Context,
	name string, args *MemberArgs, opts ...pulumi.ResourceOption) (*Member, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MemberId == nil {
		return nil, errors.New("invalid value for required argument 'MemberId'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	var resource Member
	err := ctx.RegisterResource("zerotier:index/member:Member", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMember gets an existing Member resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberState, opts ...pulumi.ResourceOption) (*Member, error) {
	var resource Member
	err := ctx.ReadResource("zerotier:index/member:Member", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Member resources.
type memberState struct {
	// Is this member allowed to activate ethernet bridging over the ZeroTier network?
	AllowEthernetBridging *bool `pulumi:"allowEthernetBridging"`
	// Is the member authorized on the network?
	Authorized *bool `pulumi:"authorized"`
	// List of network capabilities
	Capabilities []int `pulumi:"capabilities"`
	// Text description of this member.
	Description *string `pulumi:"description"`
	// Is this member visible?
	Hidden *bool `pulumi:"hidden"`
	// List of IP address assignments
	IpAssignments []string `pulumi:"ipAssignments"`
	// ID of this member.
	MemberId *string `pulumi:"memberId"`
	// Descriptive name of this member.
	Name *string `pulumi:"name"`
	// ID of the network this member belongs to
	NetworkId *string `pulumi:"networkId"`
	// Exempt this member from the IP auto assignment pool on a Network
	NoAutoAssignIps *bool `pulumi:"noAutoAssignIps"`
	// List of network tags
	Tags [][]int `pulumi:"tags"`
}

type MemberState struct {
	// Is this member allowed to activate ethernet bridging over the ZeroTier network?
	AllowEthernetBridging pulumi.BoolPtrInput
	// Is the member authorized on the network?
	Authorized pulumi.BoolPtrInput
	// List of network capabilities
	Capabilities pulumi.IntArrayInput
	// Text description of this member.
	Description pulumi.StringPtrInput
	// Is this member visible?
	Hidden pulumi.BoolPtrInput
	// List of IP address assignments
	IpAssignments pulumi.StringArrayInput
	// ID of this member.
	MemberId pulumi.StringPtrInput
	// Descriptive name of this member.
	Name pulumi.StringPtrInput
	// ID of the network this member belongs to
	NetworkId pulumi.StringPtrInput
	// Exempt this member from the IP auto assignment pool on a Network
	NoAutoAssignIps pulumi.BoolPtrInput
	// List of network tags
	Tags pulumi.IntArrayArrayInput
}

func (MemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberState)(nil)).Elem()
}

type memberArgs struct {
	// Is this member allowed to activate ethernet bridging over the ZeroTier network?
	AllowEthernetBridging *bool `pulumi:"allowEthernetBridging"`
	// Is the member authorized on the network?
	Authorized *bool `pulumi:"authorized"`
	// List of network capabilities
	Capabilities []int `pulumi:"capabilities"`
	// Text description of this member.
	Description *string `pulumi:"description"`
	// Is this member visible?
	Hidden *bool `pulumi:"hidden"`
	// List of IP address assignments
	IpAssignments []string `pulumi:"ipAssignments"`
	// ID of this member.
	MemberId string `pulumi:"memberId"`
	// Descriptive name of this member.
	Name *string `pulumi:"name"`
	// ID of the network this member belongs to
	NetworkId string `pulumi:"networkId"`
	// Exempt this member from the IP auto assignment pool on a Network
	NoAutoAssignIps *bool `pulumi:"noAutoAssignIps"`
	// List of network tags
	Tags [][]int `pulumi:"tags"`
}

// The set of arguments for constructing a Member resource.
type MemberArgs struct {
	// Is this member allowed to activate ethernet bridging over the ZeroTier network?
	AllowEthernetBridging pulumi.BoolPtrInput
	// Is the member authorized on the network?
	Authorized pulumi.BoolPtrInput
	// List of network capabilities
	Capabilities pulumi.IntArrayInput
	// Text description of this member.
	Description pulumi.StringPtrInput
	// Is this member visible?
	Hidden pulumi.BoolPtrInput
	// List of IP address assignments
	IpAssignments pulumi.StringArrayInput
	// ID of this member.
	MemberId pulumi.StringInput
	// Descriptive name of this member.
	Name pulumi.StringPtrInput
	// ID of the network this member belongs to
	NetworkId pulumi.StringInput
	// Exempt this member from the IP auto assignment pool on a Network
	NoAutoAssignIps pulumi.BoolPtrInput
	// List of network tags
	Tags pulumi.IntArrayArrayInput
}

func (MemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberArgs)(nil)).Elem()
}

type MemberInput interface {
	pulumi.Input

	ToMemberOutput() MemberOutput
	ToMemberOutputWithContext(ctx context.Context) MemberOutput
}

func (*Member) ElementType() reflect.Type {
	return reflect.TypeOf((**Member)(nil)).Elem()
}

func (i *Member) ToMemberOutput() MemberOutput {
	return i.ToMemberOutputWithContext(context.Background())
}

func (i *Member) ToMemberOutputWithContext(ctx context.Context) MemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberOutput)
}

// MemberArrayInput is an input type that accepts MemberArray and MemberArrayOutput values.
// You can construct a concrete instance of `MemberArrayInput` via:
//
//          MemberArray{ MemberArgs{...} }
type MemberArrayInput interface {
	pulumi.Input

	ToMemberArrayOutput() MemberArrayOutput
	ToMemberArrayOutputWithContext(context.Context) MemberArrayOutput
}

type MemberArray []MemberInput

func (MemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Member)(nil)).Elem()
}

func (i MemberArray) ToMemberArrayOutput() MemberArrayOutput {
	return i.ToMemberArrayOutputWithContext(context.Background())
}

func (i MemberArray) ToMemberArrayOutputWithContext(ctx context.Context) MemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberArrayOutput)
}

// MemberMapInput is an input type that accepts MemberMap and MemberMapOutput values.
// You can construct a concrete instance of `MemberMapInput` via:
//
//          MemberMap{ "key": MemberArgs{...} }
type MemberMapInput interface {
	pulumi.Input

	ToMemberMapOutput() MemberMapOutput
	ToMemberMapOutputWithContext(context.Context) MemberMapOutput
}

type MemberMap map[string]MemberInput

func (MemberMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Member)(nil)).Elem()
}

func (i MemberMap) ToMemberMapOutput() MemberMapOutput {
	return i.ToMemberMapOutputWithContext(context.Background())
}

func (i MemberMap) ToMemberMapOutputWithContext(ctx context.Context) MemberMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberMapOutput)
}

type MemberOutput struct{ *pulumi.OutputState }

func (MemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Member)(nil)).Elem()
}

func (o MemberOutput) ToMemberOutput() MemberOutput {
	return o
}

func (o MemberOutput) ToMemberOutputWithContext(ctx context.Context) MemberOutput {
	return o
}

type MemberArrayOutput struct{ *pulumi.OutputState }

func (MemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Member)(nil)).Elem()
}

func (o MemberArrayOutput) ToMemberArrayOutput() MemberArrayOutput {
	return o
}

func (o MemberArrayOutput) ToMemberArrayOutputWithContext(ctx context.Context) MemberArrayOutput {
	return o
}

func (o MemberArrayOutput) Index(i pulumi.IntInput) MemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Member {
		return vs[0].([]*Member)[vs[1].(int)]
	}).(MemberOutput)
}

type MemberMapOutput struct{ *pulumi.OutputState }

func (MemberMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Member)(nil)).Elem()
}

func (o MemberMapOutput) ToMemberMapOutput() MemberMapOutput {
	return o
}

func (o MemberMapOutput) ToMemberMapOutputWithContext(ctx context.Context) MemberMapOutput {
	return o
}

func (o MemberMapOutput) MapIndex(k pulumi.StringInput) MemberOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Member {
		return vs[0].(map[string]*Member)[vs[1].(string)]
	}).(MemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MemberInput)(nil)).Elem(), &Member{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemberArrayInput)(nil)).Elem(), MemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemberMapInput)(nil)).Elem(), MemberMap{})
	pulumi.RegisterOutputType(MemberOutput{})
	pulumi.RegisterOutputType(MemberArrayOutput{})
	pulumi.RegisterOutputType(MemberMapOutput{})
}
