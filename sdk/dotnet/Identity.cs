// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Zerotier
{
    /// <summary>
    /// Identity generator for ZeroTier members. Use this provider with others to authenticate and join users to your networks.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Zerotier = Pulumi.Zerotier;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var alice = new Zerotier.Identity("alice", new Zerotier.IdentityArgs
    ///         {
    ///         });
    ///         var bob = new Zerotier.Identity("bob", new Zerotier.IdentityArgs
    ///         {
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [ZerotierResourceType("zerotier:index/identity:Identity")]
    public partial class Identity : Pulumi.CustomResource
    {
        /// <summary>
        /// The private key of the identity.
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// The public key of the identity.
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;


        /// <summary>
        /// Create a Identity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Identity(string name, IdentityArgs? args = null, CustomResourceOptions? options = null)
            : base("zerotier:index/identity:Identity", name, args ?? new IdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Identity(string name, Input<string> id, IdentityState? state = null, CustomResourceOptions? options = null)
            : base("zerotier:index/identity:Identity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Identity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Identity Get(string name, Input<string> id, IdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new Identity(name, id, state, options);
        }
    }

    public sealed class IdentityArgs : Pulumi.ResourceArgs
    {
        public IdentityArgs()
        {
        }
    }

    public sealed class IdentityState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The private key of the identity.
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        /// <summary>
        /// The public key of the identity.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        public IdentityState()
        {
        }
    }
}
