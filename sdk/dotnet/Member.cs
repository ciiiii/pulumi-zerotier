// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Zerotier
{
    /// <summary>
    /// Manage ZeroTier members and join them to networks
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Zerotier = Pulumi.Zerotier;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var alice = new Zerotier.Member("alice", new Zerotier.MemberArgs
    ///         {
    ///             MemberId = zerotier_identity.Alice.Id,
    ///             NetworkId = zerotier_network.Alicenet.Id,
    ///             Description = "Hello, world",
    ///             Hidden = true,
    ///             AllowEthernetBridging = true,
    ///             NoAutoAssignIps = true,
    ///             IpAssignments = 
    ///             {
    ///                 "10.0.0.1",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [ZerotierResourceType("zerotier:index/member:Member")]
    public partial class Member : Pulumi.CustomResource
    {
        /// <summary>
        /// Is this member allowed to activate ethernet bridging over the ZeroTier network?
        /// </summary>
        [Output("allowEthernetBridging")]
        public Output<bool?> AllowEthernetBridging { get; private set; } = null!;

        /// <summary>
        /// Is the member authorized on the network?
        /// </summary>
        [Output("authorized")]
        public Output<bool?> Authorized { get; private set; } = null!;

        /// <summary>
        /// List of network capabilities
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<int>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// Text description of this member.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Is this member visible?
        /// </summary>
        [Output("hidden")]
        public Output<bool?> Hidden { get; private set; } = null!;

        /// <summary>
        /// List of IP address assignments
        /// </summary>
        [Output("ipAssignments")]
        public Output<ImmutableArray<string>> IpAssignments { get; private set; } = null!;

        /// <summary>
        /// ID of this member.
        /// </summary>
        [Output("memberId")]
        public Output<string> MemberId { get; private set; } = null!;

        /// <summary>
        /// Descriptive name of this member.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the network this member belongs to
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Exempt this member from the IP auto assignment pool on a Network
        /// </summary>
        [Output("noAutoAssignIps")]
        public Output<bool?> NoAutoAssignIps { get; private set; } = null!;

        /// <summary>
        /// List of network tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<ImmutableArray<int>>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Member resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Member(string name, MemberArgs args, CustomResourceOptions? options = null)
            : base("zerotier:index/member:Member", name, args ?? new MemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Member(string name, Input<string> id, MemberState? state = null, CustomResourceOptions? options = null)
            : base("zerotier:index/member:Member", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Member resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Member Get(string name, Input<string> id, MemberState? state = null, CustomResourceOptions? options = null)
        {
            return new Member(name, id, state, options);
        }
    }

    public sealed class MemberArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this member allowed to activate ethernet bridging over the ZeroTier network?
        /// </summary>
        [Input("allowEthernetBridging")]
        public Input<bool>? AllowEthernetBridging { get; set; }

        /// <summary>
        /// Is the member authorized on the network?
        /// </summary>
        [Input("authorized")]
        public Input<bool>? Authorized { get; set; }

        [Input("capabilities")]
        private InputList<int>? _capabilities;

        /// <summary>
        /// List of network capabilities
        /// </summary>
        public InputList<int> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<int>());
            set => _capabilities = value;
        }

        /// <summary>
        /// Text description of this member.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Is this member visible?
        /// </summary>
        [Input("hidden")]
        public Input<bool>? Hidden { get; set; }

        [Input("ipAssignments")]
        private InputList<string>? _ipAssignments;

        /// <summary>
        /// List of IP address assignments
        /// </summary>
        public InputList<string> IpAssignments
        {
            get => _ipAssignments ?? (_ipAssignments = new InputList<string>());
            set => _ipAssignments = value;
        }

        /// <summary>
        /// ID of this member.
        /// </summary>
        [Input("memberId", required: true)]
        public Input<string> MemberId { get; set; } = null!;

        /// <summary>
        /// Descriptive name of this member.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the network this member belongs to
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// Exempt this member from the IP auto assignment pool on a Network
        /// </summary>
        [Input("noAutoAssignIps")]
        public Input<bool>? NoAutoAssignIps { get; set; }

        [Input("tags")]
        private InputList<ImmutableArray<int>>? _tags;

        /// <summary>
        /// List of network tags
        /// </summary>
        public InputList<ImmutableArray<int>> Tags
        {
            get => _tags ?? (_tags = new InputList<ImmutableArray<int>>());
            set => _tags = value;
        }

        public MemberArgs()
        {
        }
    }

    public sealed class MemberState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Is this member allowed to activate ethernet bridging over the ZeroTier network?
        /// </summary>
        [Input("allowEthernetBridging")]
        public Input<bool>? AllowEthernetBridging { get; set; }

        /// <summary>
        /// Is the member authorized on the network?
        /// </summary>
        [Input("authorized")]
        public Input<bool>? Authorized { get; set; }

        [Input("capabilities")]
        private InputList<int>? _capabilities;

        /// <summary>
        /// List of network capabilities
        /// </summary>
        public InputList<int> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<int>());
            set => _capabilities = value;
        }

        /// <summary>
        /// Text description of this member.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Is this member visible?
        /// </summary>
        [Input("hidden")]
        public Input<bool>? Hidden { get; set; }

        [Input("ipAssignments")]
        private InputList<string>? _ipAssignments;

        /// <summary>
        /// List of IP address assignments
        /// </summary>
        public InputList<string> IpAssignments
        {
            get => _ipAssignments ?? (_ipAssignments = new InputList<string>());
            set => _ipAssignments = value;
        }

        /// <summary>
        /// ID of this member.
        /// </summary>
        [Input("memberId")]
        public Input<string>? MemberId { get; set; }

        /// <summary>
        /// Descriptive name of this member.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the network this member belongs to
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Exempt this member from the IP auto assignment pool on a Network
        /// </summary>
        [Input("noAutoAssignIps")]
        public Input<bool>? NoAutoAssignIps { get; set; }

        [Input("tags")]
        private InputList<ImmutableArray<int>>? _tags;

        /// <summary>
        /// List of network tags
        /// </summary>
        public InputList<ImmutableArray<int>> Tags
        {
            get => _tags ?? (_tags = new InputList<ImmutableArray<int>>());
            set => _tags = value;
        }

        public MemberState()
        {
        }
    }
}
